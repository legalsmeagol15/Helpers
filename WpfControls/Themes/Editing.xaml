<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"                
                    xmlns:editing="clr-namespace:WpfControls.Editing"
                    xmlns:converters="clr-namespace:WpfControls.Converters">


    <Style TargetType="{x:Type editing:AutoEditor}">
        
        
        <Style.Resources>
            <Style TargetType="Label">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="MinWidth" Value="70" />
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="MinWidth" Value="50" />
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Bottom"/>                
            </Style>
            
        </Style.Resources>
        
        
        <Setter Property="Template">
            
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editing:AutoEditor}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Resources>
                            <CollectionViewSource Source="{Binding ItemsSource, RelativeSource={RelativeSource TemplatedParent}}" x:Key="cvsPropGroups">
                                <CollectionViewSource.GroupDescriptions>
                                    <PropertyGroupDescription PropertyName="GroupName" />
                                </CollectionViewSource.GroupDescriptions>
                                <CollectionViewSource.SortDescriptions>
                                    <scm:SortDescription PropertyName="GroupName" />
                                </CollectionViewSource.SortDescriptions>
                            </CollectionViewSource>
                        </Border.Resources>

                        <TreeView>
                            <TreeView.Style>
                                <Style TargetType="TreeView">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Source={StaticResource cvsPropGroups}, Path=Groups.Count}" Value="1">
                                            <Setter Property="ItemsSource" Value="{Binding ItemsSource, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <Setter Property="ItemTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <Label Content="{Binding Label}" HorizontalAlignment="Right">
                                                                <Label.Style>
                                                                    <Style TargetType="Label">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding Label}">
                                                                                <Setter Property="Visibility" Value="Hidden" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Label.Style>
                                                            </Label>
                                                            <Label Content="{Binding}" HorizontalAlignment="Left" HorizontalContentAlignment="Left"/>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="ItemsSource" Value="{Binding Source={StaticResource cvsPropGroups}, Mode=OneWay, Path=Groups}"/>
                                    <Setter Property="ItemTemplate">
                                        <Setter.Value>
                                            <HierarchicalDataTemplate>
                                                <TreeView BorderThickness="0">
                                                    <TreeView.Resources>
                                                        <CollectionViewSource x:Key="cvsProps" Source="{Binding Path=Items}">
                                                            <CollectionViewSource.SortDescriptions>
                                                                <scm:SortDescription PropertyName="Priority" />
                                                                <scm:SortDescription PropertyName="Label" />
                                                            </CollectionViewSource.SortDescriptions>
                                                        </CollectionViewSource>
                                                    </TreeView.Resources>
                                                    <TreeViewItem Header="{Binding Path=Name}" ItemsSource="{Binding Source={StaticResource cvsProps}}" IsExpanded="True">
                                                        <TreeViewItem.ItemTemplate>
                                                            <DataTemplate>
                                                                <StackPanel Orientation="Horizontal">
                                                                    <Label Content="{Binding Label}" HorizontalAlignment="Right" />
                                                                    <Label Content="{Binding}" HorizontalAlignment="Left" HorizontalContentAlignment="Left"/>
                                                                </StackPanel>
                                                            </DataTemplate>
                                                        </TreeViewItem.ItemTemplate>
                                                    </TreeViewItem>
                                                </TreeView>
                                            </HierarchicalDataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                
                            </TreeView.Style>
                           
                        </TreeView>
                    </Border>
                       
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>



    <Style TargetType="{x:Type editing:BoolEditor}">
        <Style.Resources>
            <converters:BoolInverter x:Key="inverter" />
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type editing:BoolEditor}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <DockPanel>                                    
                                    <CheckBox IsChecked="{Binding Input}" IsEnabled="False" VerticalAlignment="Center" Margin="2"/>
                                </DockPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger  Property="IsReadOnly" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type editing:BoolEditor}">        
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <DockPanel>
                                    <RadioButton Content="True" IsChecked="{Binding Input}"  VerticalAlignment="Center" Margin="2"/>
                                    <RadioButton Content="False" IsChecked="{Binding Input, Converter={StaticResource inverter}}" VerticalAlignment="Center" Margin="2" />
                                </DockPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

        </Style.Triggers>

    </Style>



    <Style TargetType="{x:Type editing:DateTimeEditor}">
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type editing:DateTimeEditor}">
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                <DockPanel>                                    
                                    <Label Content="{Binding Input}" />
                                </DockPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsReadOnly" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type editing:DateTimeEditor}">
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                <DockPanel>                                    
                                    <TextBox Text="{Binding Input}" />
                                </DockPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        
    </Style>



    <Style TargetType="{x:Type editing:DictionaryEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editing:DictionaryEditor}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Label Content="Not implemented yet." />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type editing:DoubleEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editing:DoubleEditor}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel>
                            <TextBox Text="{Binding Input}" IsReadOnly="{Binding IsReadOnly}" />
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    
    <Style TargetType="{x:Type editing:PointEditor}">
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type editing:PointEditor}">
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                <DockPanel>                                    
                                    <TextBox Text="{Binding Input}"  />
                                </DockPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type editing:PointEditor}">
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                <DockPanel>                                    
                                    <TextBlock Text="{Binding Input}"/>
                                </DockPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>

    </Style>

    

    <Style TargetType="{x:Type editing:StringEditor}">
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type editing:StringEditor}">
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <DockPanel>                                    
                                    <TextBox Text="{Binding Input}" />
                                </DockPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type editing:StringEditor}">
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <DockPanel>                                    
                                    <TextBlock Text="{Binding Input}" />
                                </DockPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>

    </Style>
    
    
</ResourceDictionary>